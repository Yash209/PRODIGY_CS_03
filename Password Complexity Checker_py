import re

def check_password_strength(password):
    # Minimum length requirement
    min_length = 8

    # Compile regex patterns for different criteria
    patterns = {
        'length': r'.{%d,}' % min_length,
        'uppercase': r'[A-Z]',
        'lowercase': r'[a-z]',
        'digit': r'\d',
        'special': r'[^A-Za-z0-9]'
    }

    # Check each criterion
    criteria = {
        'length': len(password) >= min_length,
        'uppercase': bool(re.search(patterns['uppercase'], password)),
        'lowercase': bool(re.search(patterns['lowercase'], password)),
        'digit': bool(re.search(patterns['digit'], password)),
        'special': bool(re.search(patterns['special'], password))
    }

    # Calculate score based on criteria
    score = sum(criteria.values())

    # Determine strength based on score
    if score == 5:
        strength = "Very Strong"
    elif score >= 4:
        strength = "Strong"
    elif score >= 3:
        strength = "Moderate"
    elif score >= 2:
        strength = "Weak"
    else:
        strength = "Very Weak"

    return strength, criteria

if __name__ == "__main__":
    # Example usage
    password = input("Enter your password: ")
    strength, criteria = check_password_strength(password)

    print(f"Password strength: {strength}")
    print("Criteria:")
    print(f"- Length: {'✓' if criteria['length'] else '✗'}")
    print(f"- Uppercase letter: {'✓' if criteria['uppercase'] else '✗'}")
    print(f"- Lowercase letter: {'✓' if criteria['lowercase'] else '✗'}")
    print(f"- Digit: {'✓' if criteria['digit'] else '✗'}")
    print(f"- Special character: {'✓' if criteria['special'] else '✗'}")import re

def check_password_strength(password):
    # Minimum length requirement
    min_length = 8

    # Compile regex patterns for different criteria
    patterns = {
        'length': r'.{%d,}' % min_length,
        'uppercase': r'[A-Z]',
        'lowercase': r'[a-z]',
        'digit': r'\d',
        'special': r'[^A-Za-z0-9]'
    }

    # Check each criterion
    criteria = {
        'length': len(password) >= min_length,
        'uppercase': bool(re.search(patterns['uppercase'], password)),
        'lowercase': bool(re.search(patterns['lowercase'], password)),
        'digit': bool(re.search(patterns['digit'], password)),
        'special': bool(re.search(patterns['special'], password))
    }

    # Calculate score based on criteria
    score = sum(criteria.values())

    # Determine strength based on score
    if score == 5:
        strength = "Very Strong"
    elif score >= 4:
        strength = "Strong"
    elif score >= 3:
        strength = "Moderate"
    elif score >= 2:
        strength = "Weak"
    else:
        strength = "Very Weak"

    return strength, criteria

if __name__ == "__main__":
    # Example usage
    password = input("Enter your password: ")
    strength, criteria = check_password_strength(password)

    print(f"Password strength: {strength}")
    print("Criteria:")
    print(f"- Length: {'✓' if criteria['length'] else '✗'}")
    print(f"- Uppercase letter: {'✓' if criteria['uppercase'] else '✗'}")
    print(f"- Lowercase letter: {'✓' if criteria['lowercase'] else '✗'}")
    print(f"- Digit: {'✓' if criteria['digit'] else '✗'}")
    print(f"- Special character: {'✓' if criteria['special'] else '✗'}")
